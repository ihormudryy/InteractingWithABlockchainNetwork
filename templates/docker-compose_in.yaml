version: "3.1"

networks: 
  basic:

services:
  statedb.${org1_domain}:
    container_name: statedb.${org1_domain}
    image: ${COUCH_DB}
    environment:
      - COUCHDB_USER=${DB_ADMIN}
      - COUCHDB_PASSWORD=${DB_PASSWORD}
    ports:
      - 7984:5984
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"
    networks:
      - basic

  statedb.${org2_domain}:
    container_name: statedb.${org2_domain}
    image: ${COUCH_DB}
    environment:
      - COUCHDB_USER=${DB_ADMIN}
      - COUCHDB_PASSWORD=${DB_PASSWORD}
    ports:
      - 8984:5984
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"
    networks:
      - basic

  ca.${org1_domain}:
    container_name: ca.${org1_domain}
    image: hyperledger/fabric-ca:${CA_TAG}
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    command: fabric-ca-server start
    ports:
      - 7054:7054
    volumes:
      - ./templates/cli/${org1}/CA:/etc/hyperledger/fabric-ca-server
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"
    networks:
      - basic

  ca.${org2_domain}:
    container_name: ca.${org2_domain}
    image: hyperledger/fabric-ca:${CA_TAG}
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    command: fabric-ca-server start
    ports:
      - 8054:7054
    volumes:
      - ./templates/cli/${org2}/CA:/etc/hyperledger/fabric-ca-server
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"
    networks:
      - basic

  orderer.${orderer_domain}:
    container_name: orderer.${orderer_domain}
    image: hyperledger/fabric-orderer:${CA_TAG}
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/fabric/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=${orderer}
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/fabric/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/fabric/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/fabric/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/fabric/tls/ca.crt]
    working_dir: /etc/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
      - ./templates/cli/peers/ordererOrganizations/${orderer_domain}/orderers/orderer.${orderer_domain}/tls:/etc/hyperledger/fabric/tls
      - ./templates/cli/peers/ordererOrganizations/${orderer_domain}/orderers/orderer.${orderer_domain}/msp:/etc/hyperledger/fabric/msp
      - ./templates/cli/${orderer}/genesis.block:/etc/hyperledger/fabric/genesis.block
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"
    networks:
      - basic

  peer0.${org1_domain}:
    container_name: peer0.${org1_domain}
    image: hyperledger/fabric-peer:${CA_TAG}
    environment:
      - CORE_PEER_ID=peer0.${org1_domain}
      - CORE_PEER_ADDRESS=peer0.${org1_domain}:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.${org1_domain}:7051
      - CORE_PEER_LOCALMSPID=${org1}
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=statedb.${org1_domain}:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${DB_ADMIN}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${DB_PASSWORD}
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=basic
      - CORE_LOGGING_LEVEL=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
    working_dir: /etc/hyperledger/fabric
    command: peer node start
    restart: unless-stopped
    volumes:
      - /var/run/:/host/var/run/
      - ./templates/cli/peers/peerOrganizations/${org1_domain}/peers/peer0.${org1_domain}/msp:/etc/hyperledger/fabric/msp
      - ./templates/cli/peers/peerOrganizations/${org1_domain}/peers/peer0.${org1_domain}/tls:/etc/hyperledger/fabric/tls    
    ports:
      - 7051:7051
      - 7053:7053
    depends_on:
      - orderer.${orderer_domain}
      - statedb.${org1_domain}
      - ca.${org1_domain}
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"
    networks:
      - basic

  peer1.${org1_domain}:
    container_name: peer1.${org1_domain}
    image: hyperledger/fabric-peer:${CA_TAG}
    environment:
      - CORE_PEER_ID=peer1.${org1_domain}
      - CORE_PEER_ADDRESS=peer1.${org1_domain}:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.${org1_domain}:7051
      - CORE_PEER_LOCALMSPID=${org1}
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=statedb.${org1_domain}:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${DB_ADMIN}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${DB_PASSWORD}
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=basic
      - CORE_LOGGING_LEVEL=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
    working_dir: /etc/hyperledger/fabric
    command: peer node start
    restart: unless-stopped
    volumes:
      - /var/run/:/host/var/run/
      - ./templates/cli/peers/peerOrganizations/${org1_domain}/peers/peer1.${org1_domain}/msp:/etc/hyperledger/fabric/msp
      - ./templates/cli/peers/peerOrganizations/${org1_domain}/peers/peer1.${org1_domain}/tls:/etc/hyperledger/fabric/tls    
    ports:
      - 8051:7051
      - 8053:7053
    depends_on:
      - orderer.${orderer_domain}
      - statedb.${org1_domain}
      - ca.${org1_domain}
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"
    networks:
      - basic

  peer0.${org2_domain}:
    container_name: peer0.${org2_domain}
    image: hyperledger/fabric-peer:${CA_TAG}
    environment:
      - CORE_PEER_ID=peer0.${org2_domain}
      - CORE_PEER_ADDRESS=peer0.${org2_domain}:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.${org2_domain}:7051
      - CORE_PEER_LOCALMSPID=${org2}
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=statedb.${org2_domain}:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${DB_ADMIN}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${DB_PASSWORD}
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=basic
      - CORE_LOGGING_LEVEL=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
    working_dir: /etc/hyperledger/fabric
    command: peer node start
    restart: unless-stopped
    volumes:
      - /var/run/:/host/var/run/
      - ./templates/cli/peers/peerOrganizations/${org2_domain}/peers/peer0.${org2_domain}/msp:/etc/hyperledger/fabric/msp
      - ./templates/cli/peers/peerOrganizations/${org2_domain}/peers/peer0.${org2_domain}/tls:/etc/hyperledger/fabric/tls
    ports:
      - 9051:7051
      - 9053:7053
    depends_on:
      - orderer.${orderer_domain}
      - statedb.${org2_domain}
      - ca.${org2_domain}
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"
    networks:
      - basic

  peer1.${org2_domain}:
    container_name: peer1.${org2_domain}
    image: hyperledger/fabric-peer:${CA_TAG}
    environment:
      - CORE_PEER_ID=peer1.${org2_domain}
      - CORE_PEER_ADDRESS=peer1.${org2_domain}:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.${org2_domain}:7051
      - CORE_PEER_LOCALMSPID=${org1}
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=statedb.${org2_domain}:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${DB_ADMIN}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${DB_PASSWORD}
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=basic
      - CORE_LOGGING_LEVEL=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
    working_dir: /etc/hyperledger/fabric
    command: peer node start
    restart: unless-stopped
    volumes:
      - /var/run/:/host/var/run/
      - ./templates/cli/peers/peerOrganizations/${org2_domain}/peers/peer1.${org2_domain}/msp:/etc/hyperledger/fabric/msp
      - ./templates/cli/peers/peerOrganizations/${org2_domain}/peers/peer1.${org2_domain}/tls:/etc/hyperledger/fabric/tls    
    ports:
      - 10051:7051
      - 10053:7053
    depends_on:
      - orderer.${orderer_domain}
      - statedb.${org2_domain}
      - ca.${org2_domain}
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"
    networks:
      - basic
  
  cli:
    container_name: cli
    image: hyperledger/fabric-tools:${CA_TAG}
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=INFO
      - CORE_PEER_ID=cli
      #- CORE_PEER_ADDRESS=peer0.${org1_domain}:7051
      #- CORE_PEER_LOCALMSPID=${org1}
      #- CORE_PEER_TLS_ENABLED=true
      #- CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/peer/msp
      #- CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/peer/tls/server.crt
      #- CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/peer/tls/server.key
      #- CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/peer/tls/ca.crt
      - ORDERER_CA=/etc/hyperledger/fabric/orderer/msp/tlscacerts/tlsca.${orderer_domain}-cert.pem
      - ORDERER_DOMAIN=${orderer_domain}
      - CHANNEL_NAME=${channel_name}
      - CC_NAME=subscription
      - ORG1=${org1_domain}
      - ORG1_ID=${org1}
      - ORG2=${org2_domain}
      - ORG2_ID=${org2}
      - CA_DIR=/etc/hyperledger/fabric/all/templates/cli
    working_dir: /etc/hyperledger/fabric/all/scripts
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - $(pwd):/etc/hyperledger/fabric/all
      - ./templates/cli/peers/peerOrganizations/${org1_domain}/peers/peer0.${org1_domain}/msp:/etc/hyperledger/fabric/peer/msp
      - ./templates/cli/peers/peerOrganizations/${org1_domain}/peers/peer0.${org1_domain}/tls:/etc/hyperledger/fabric/peer/tls
      - ./templates/cli/peers/ordererOrganizations/${orderer_domain}/orderers/orderer.${orderer_domain}/tls:/etc/hyperledger/fabric/orderer/tls
      - ./templates/cli/peers/ordererOrganizations/${orderer_domain}/orderers/orderer.${orderer_domain}/msp:/etc/hyperledger/fabric/orderer/msp
    networks:
      - basic
