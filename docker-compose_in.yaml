version: "3.1"

secrets:
  config:
    file: ./crypto-config/configuration/config.json
  channel:
    file: ./crypto-config/configuration/channel.tx

services:
  ca-datastore:
    container_name: ca-datastore
    #image: hyperledger/fabric-couchdb:${FABRIC_TAG}
    image: ishangulhane/fabric-couchdb
    environment:
      # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
      # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
      - COUCHDB_USER=${DB_ADMIN}
      - COUCHDB_PASSWORD=${DB_PASSWORD}
    ports:
      - 5984:5984
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  ${org1}-statedb:
    container_name: ${org1}-statedb
    #image: hyperledger/fabric-couchdb:${FABRIC_TAG}
    image: ishangulhane/fabric-couchdb
    environment:
      - COUCHDB_USER=${DB_ADMIN}
      - COUCHDB_PASSWORD=${DB_PASSWORD}
    ports:
      - 7984:5984
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  ${org2}-statedb:
    container_name: ${org2}-statedb
    #image: hyperledger/fabric-couchdb:${FABRIC_TAG}
    image: ishangulhane/fabric-couchdb
    environment:
      - COUCHDB_USER=${DB_ADMIN}
      - COUCHDB_PASSWORD=${DB_PASSWORD}
    ports:
      - 8984:5984
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  redis-server:
    hostname: redis-server
    image: redis-server
    ports:
      - '7000-7005:7000-7005'
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  ${org1}-ca:
    container_name: ${org1}-ca
    image: hyperledger/fabric-ca:${CA_TAG}
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    command: fabric-ca-server start
    ports:
      - 8054:7054
    volumes:
      - ./templates/cli/${org1}/CA:/etc/hyperledger/fabric-ca-server
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  ${org2}-ca:
    container_name: ${org2}-ca
    image: hyperledger/fabric-ca:${CA_TAG}
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
    command: fabric-ca-server start
    ports:
      - 7054:7054
    volumes:
      - ./templates/cli/${org2}/CA:/etc/hyperledger/fabric-ca-server
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  ${orderer}:
    container_name: ${orderer}
    image: hyperledger/fabric-orderer:${CA_TAG}
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/fabric/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=${orderer}MSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/fabric/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/fabric/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/fabric/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=/etc/hyperledger/fabric/tls/ca.crt
    working_dir: /etc/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
      - ./templates/cli/${orderer}:/etc/hyperledger/fabric
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  peer0.${org1_domain}:
    container_name: peer0.${org1_domain}
    image: hyperledger/fabric-peer:${CA_TAG}
    environment:
      - CORE_PEER_ID=peer0.${org1_domain}
      - CORE_PEER_ADDRESS=peer0.${org1_domain}:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.${org1_domain}:7051
      - CORE_PEER_LOCALMSPID=${org1}MSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=peer0.${org1_domain}-statedb:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${DB_ADMIN}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${DB_PASSWORD}
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COIN_NAME}_default
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
    working_dir: /etc/hyperledger/fabric
    command: peer node start
    restart: unless-stopped
    volumes:
      - /var/run/:/host/var/run/
      - ./templates/cli/${org1_domain}/peers/peer0.${org1_domain}/msp:/etc/hyperledger/fabric/msp
      - ./templates/cli/${org1_domain}/peers/peer0.${org1_domain}/tls:/etc/hyperledger/fabric/tls    
    ports:
      - 7051:7051
      - 7053:7053
    depends_on:
      - ${orderer}
      - ${org1}-ca
      - ${org2}-peer
      - ca-datastore
      - ${org1}-statedb
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  peer1.${org1_domain}:
    container_name: peer1.${org1_domain}
    image: hyperledger/fabric-peer:${CA_TAG}
    environment:
      - CORE_PEER_ID=peer1.${org1_domain}
      - CORE_PEER_ADDRESS=peer1.${org1_domain}:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.${org1_domain}:7051
      - CORE_PEER_LOCALMSPID=${org1}MSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=peer1.${org1_domain}-statedb:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${DB_ADMIN}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${DB_PASSWORD}
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COIN_NAME}_default
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
    working_dir: /etc/hyperledger/fabric
    command: peer node start
    restart: unless-stopped
    volumes:
      - /var/run/:/host/var/run/
      - ./templates/cli/${org1_domain}/peers/peer1.${org1_domain}/msp:/etc/hyperledger/fabric/msp
      - ./templates/cli/${org1_domain}/peers/peer1.${org1_domain}/tls:/etc/hyperledger/fabric/tls    
    ports:
      - 7052:7051
      - 7054:7053
    depends_on:
      - ${orderer}
      - ca-datastore
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  peer0.${org2_domain}:
    container_name: ${org2}.${org2_domain}
    image: hyperledger/fabric-peer:${CA_TAG}
    environment:
      - CORE_PEER_ID=peer0.${org2_domain}
      - CORE_PEER_ADDRESS=peer0.${org2_domain}:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.${org2_domain}:7051
      - CORE_PEER_LOCALMSPID=${org2}MSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=${org2}-statedb:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${DB_ADMIN}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${DB_PASSWORD}
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COIN_NAME}_default
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
    working_dir: /etc/hyperledger/fabric
    command: peer node start
    restart: unless-stopped
    volumes:
      - /var/run/:/host/var/run/
      - ./templates/cli/${org1_domain}/peers/peer0.${org2_domain}/msp:/etc/hyperledger/fabric/msp
      - ./templates/cli/${org1_domain}/peers/peer0.${org2_domain}/tls:/etc/hyperledger/fabric/tls
    ports:
      - 8051:7051
      - 8053:7053
    depends_on:
      - ${orderer}
      - ca-datastore
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  peer1.${org2_domain}:
    container_name: peer1.${org2_domain}
    image: hyperledger/fabric-peer:${CA_TAG}
    environment:
      - CORE_PEER_ID=peer1.${org2_domain}
      - CORE_PEER_ADDRESS=peer1.${org2_domain}:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.${org2_domain}:7051
      - CORE_PEER_LOCALMSPID=${org1}MSP
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=peer1.${org2_domain}-statedb:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${DB_ADMIN}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${DB_PASSWORD}
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COIN_NAME}_default
      - CORE_LOGGING_LEVEL=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
    working_dir: /etc/hyperledger/fabric
    command: peer node start
    restart: unless-stopped
    volumes:
      - /var/run/:/host/var/run/
      - ./templates/cli/${org2_domain}/peers/peer1.${org2_domain}/msp:/etc/hyperledger/fabric/msp
      - ./templates/cli/${org2_domain}/peers/peer1.${org2_domain}/tls:/etc/hyperledger/fabric/tls    
    ports:
      - 8052:7051
      - 8054:7053
    depends_on:
      - ${orderer}
      - ca-datastore
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  blockchain-setup:
    container_name: blockchain-setup
    image: blockchain-setup
    environment:
      - DOCKER_SOCKET_PATH=/host/var/run/docker.sock
      - DOCKER_CCENV_IMAGE=hyperledger/fabric-ccenv:${CA_TAG}
      - SECRETSDIR=/run/secrets
    volumes:
      - /var/run/:/host/var/run/
    #restart: unless-stopped
    depends_on:
      - ${orderer}
      - ca-datastore
      - peer0.${org1_domain}
      - peer0.${org2_domain}
      - peer1.${org1_domain}
      - peer1.${org2_domain}
    secrets:
      - config
      - channel
    logging:
       driver: "json-file"
       options:
         max-size: "1m"
         max-file: "10"

  rabbitclient1 :
    container_name: rabbitclient1
    image: rabbit-client
    hostname: rabbitclient1
    environment:
      - SECRETSDIR=/run/secrets
      - PORT=3000
    ports:
      - 3001:3000
    depends_on:
      - redis-server
    secrets:
      - config
      - channel
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  rabbitclient2 :
    container_name: rabbitclient2
    image: rabbit-client
    hostname: rabbitclient2
    environment:
      - SECRETSDIR=/run/secrets
      - PORT=3000
    ports:
      - 3002:3000
    depends_on:
      - redis-server
    secrets:
      - config
      - channel
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  rabbitclient3 :
    container_name: rabbitclient3
    image: rabbit-client
    hostname: rabbitclient3
    environment:
      - SECRETSDIR=/run/secrets
      - PORT=3000
    ports:
      - 3003:3000
    depends_on:
      - redis-server
    secrets:
      - config
      - channel
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  rabbitclient:
    container_name: rabbitclient
    hostname: rabbitclient
    image: haproxy:1.7
    volumes:
      - ./rabbitClientHAProxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - rabbitclient1
      - rabbitclient2
      - rabbitclient3
    ports:
      - 3000:3000
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"